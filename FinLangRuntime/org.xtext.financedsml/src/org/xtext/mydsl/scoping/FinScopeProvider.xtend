/*
 * generated by Xtext 2.33.0
 */
package org.xtext.mydsl.scoping;

import org.eclipse.emf.ecore.EReference
import org.eclipse.xtext.EcoreUtil2
import org.eclipse.xtext.scoping.IScope
import org.eclipse.xtext.scoping.Scopes
import org.eclipse.xtext.scoping.impl.AbstractDeclarativeScopeProvider
import org.xtext.mydsl.fin.Bond
import org.xtext.mydsl.fin.Sell
import org.xtext.mydsl.fin.Option

/**
 * This class contains custom scoping description.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#scoping
 * on how and when to use it.
 */
class FinScopeProvider extends AbstractDeclarativeScopeProvider {
	
    
    def IScope scope_Sell_bond(Sell sell, EReference reference) {
        val root = EcoreUtil2.getRootContainer(sell)
        val allBonds = EcoreUtil2.getAllContentsOfType(root, Bond)
        return Scopes.scopeFor(allBonds)
    }
    
    def IScope scope_Sell_option(Sell sell, EReference reference) {
        val root = EcoreUtil2.getRootContainer(sell)
        val allOptions = EcoreUtil2.getAllContentsOfType(root, Option)
        return Scopes.scopeFor(allOptions)
    }
     
}
