/**
 * generated by Xtext 2.33.0
 */
package org.xtext.mydsl.fin.impl;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.xtext.mydsl.fin.Bond;
import org.xtext.mydsl.fin.FinPackage;
import org.xtext.mydsl.fin.Option;
import org.xtext.mydsl.fin.Sell;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Sell</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.mydsl.fin.impl.SellImpl#getBond <em>Bond</em>}</li>
 *   <li>{@link org.xtext.mydsl.fin.impl.SellImpl#getOption <em>Option</em>}</li>
 * </ul>
 *
 * @generated
 */
public class SellImpl extends TransactionImpl implements Sell
{
  /**
   * The cached value of the '{@link #getBond() <em>Bond</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getBond()
   * @generated
   * @ordered
   */
  protected Bond bond;

  /**
   * The cached value of the '{@link #getOption() <em>Option</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getOption()
   * @generated
   * @ordered
   */
  protected Option option;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected SellImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return FinPackage.Literals.SELL;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Bond getBond()
  {
    if (bond != null && bond.eIsProxy())
    {
      InternalEObject oldBond = (InternalEObject)bond;
      bond = (Bond)eResolveProxy(oldBond);
      if (bond != oldBond)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, FinPackage.SELL__BOND, oldBond, bond));
      }
    }
    return bond;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Bond basicGetBond()
  {
    return bond;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setBond(Bond newBond)
  {
    Bond oldBond = bond;
    bond = newBond;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, FinPackage.SELL__BOND, oldBond, bond));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Option getOption()
  {
    if (option != null && option.eIsProxy())
    {
      InternalEObject oldOption = (InternalEObject)option;
      option = (Option)eResolveProxy(oldOption);
      if (option != oldOption)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, FinPackage.SELL__OPTION, oldOption, option));
      }
    }
    return option;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Option basicGetOption()
  {
    return option;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setOption(Option newOption)
  {
    Option oldOption = option;
    option = newOption;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, FinPackage.SELL__OPTION, oldOption, option));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case FinPackage.SELL__BOND:
        if (resolve) return getBond();
        return basicGetBond();
      case FinPackage.SELL__OPTION:
        if (resolve) return getOption();
        return basicGetOption();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case FinPackage.SELL__BOND:
        setBond((Bond)newValue);
        return;
      case FinPackage.SELL__OPTION:
        setOption((Option)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case FinPackage.SELL__BOND:
        setBond((Bond)null);
        return;
      case FinPackage.SELL__OPTION:
        setOption((Option)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case FinPackage.SELL__BOND:
        return bond != null;
      case FinPackage.SELL__OPTION:
        return option != null;
    }
    return super.eIsSet(featureID);
  }

} //SellImpl
