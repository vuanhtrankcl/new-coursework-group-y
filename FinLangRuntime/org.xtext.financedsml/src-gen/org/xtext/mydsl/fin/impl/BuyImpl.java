/**
 * generated by Xtext 2.33.0
 */
package org.xtext.mydsl.fin.impl;

import java.util.Collection;

import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

import org.xtext.mydsl.fin.Bond;
import org.xtext.mydsl.fin.Buy;
import org.xtext.mydsl.fin.FinPackage;
import org.xtext.mydsl.fin.Option;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Buy</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.mydsl.fin.impl.BuyImpl#getBond <em>Bond</em>}</li>
 *   <li>{@link org.xtext.mydsl.fin.impl.BuyImpl#getOption <em>Option</em>}</li>
 * </ul>
 *
 * @generated
 */
public class BuyImpl extends TransactionImpl implements Buy
{
  /**
   * The cached value of the '{@link #getBond() <em>Bond</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getBond()
   * @generated
   * @ordered
   */
  protected EList<Bond> bond;

  /**
   * The cached value of the '{@link #getOption() <em>Option</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getOption()
   * @generated
   * @ordered
   */
  protected EList<Option> option;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected BuyImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return FinPackage.Literals.BUY;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<Bond> getBond()
  {
    if (bond == null)
    {
      bond = new EObjectContainmentEList<Bond>(Bond.class, this, FinPackage.BUY__BOND);
    }
    return bond;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<Option> getOption()
  {
    if (option == null)
    {
      option = new EObjectContainmentEList<Option>(Option.class, this, FinPackage.BUY__OPTION);
    }
    return option;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case FinPackage.BUY__BOND:
        return ((InternalEList<?>)getBond()).basicRemove(otherEnd, msgs);
      case FinPackage.BUY__OPTION:
        return ((InternalEList<?>)getOption()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case FinPackage.BUY__BOND:
        return getBond();
      case FinPackage.BUY__OPTION:
        return getOption();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case FinPackage.BUY__BOND:
        getBond().clear();
        getBond().addAll((Collection<? extends Bond>)newValue);
        return;
      case FinPackage.BUY__OPTION:
        getOption().clear();
        getOption().addAll((Collection<? extends Option>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case FinPackage.BUY__BOND:
        getBond().clear();
        return;
      case FinPackage.BUY__OPTION:
        getOption().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case FinPackage.BUY__BOND:
        return bond != null && !bond.isEmpty();
      case FinPackage.BUY__OPTION:
        return option != null && !option.isEmpty();
    }
    return super.eIsSet(featureID);
  }

} //BuyImpl
